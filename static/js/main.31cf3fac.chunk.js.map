{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClearButton","setState","handleAddButton","e","target","currentTarget","newGood","parentElement","nextElementSibling","textContent","className","this","goodLength","length","type","style","display","onClick","map","good","isSelected","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,kBAAoB,WAClB,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,gBAAkB,SAACC,GAAyB,IAAD,IACnCC,EAASD,EAAEE,cACXC,EAAO,UACXF,EAAOG,qBADI,iBACX,EAAsBC,0BADX,aACX,EAA0CC,YAEnB,WAArBL,EAAOM,UACT,EAAKT,SAAS,CAAEF,aAAcO,IAE9B,EAAKL,SAAS,CAAEF,aAAc,MAjBpC,4CAqBE,WAAU,IAAD,OACCA,EAAiBY,KAAKb,MAAtBC,aACFa,EAAab,EAAac,OAEhC,OACE,uBAAMH,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACKE,EAAD,UAEKb,EAFL,gBAIE,oBAGJ,wBACE,UAAQ,cACRe,KAAK,SACLJ,UAAU,cACVK,MAAO,CACLC,QAAWJ,EAEP,OADA,QAGNK,QAASN,KAAKX,uBAIlB,uBAAOU,UAAU,QAAjB,SACE,gCACId,EAAMsB,KAAI,SAAAC,GACV,IAAMC,EAAarB,IAAiBoB,EAEpC,OACE,qBACE,UAAQ,OAERT,UAAWU,EACP,+BACA,GALN,UAOE,6BACE,wBACE,UAASA,EAAa,eAAiB,YACvCN,KAAK,SACLJ,UAAWU,EAAa,iBAAmB,SAC3CL,MAAO,CAAEC,QAAS,QAClBC,QAAS,SAACd,GAAD,OAAO,EAAKD,gBAAgBC,IALvC,SAOGiB,EACG,IACA,QAGR,oBAAI,UAAQ,YAAYV,UAAU,eAAeW,GAAIF,EAArD,SACGA,MAnBEA,iBAxDvB,GAAyBG,IAAMC,WCf/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.31cf3fac.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleClearButton = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  handleAddButton = (e: React.MouseEvent) => {\n    const target = e.currentTarget;\n    const newGood\n    = target.parentElement?.nextElementSibling?.textContent;\n\n    if (target.className === 'button') {\n      this.setState({ selectedGood: newGood });\n    } else {\n      this.setState({ selectedGood: '' });\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const goodLength = selectedGood.length;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          { (goodLength)\n            ? (\n              `${selectedGood} is selected`\n            )\n            : 'No goods selected' }\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            style={{\n              display: (!goodLength)\n                ? 'none'\n                : 'flex',\n            }}\n            onClick={this.handleClearButton}\n          />\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            { goods.map(good => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={isSelected\n                    ? 'has-background-success-light'\n                    : ''}\n                >\n                  <td>\n                    <button\n                      data-cy={isSelected ? 'RemoveButton' : 'AddButton'}\n                      type=\"button\"\n                      className={isSelected ? 'button is-info' : 'button'}\n                      style={{ display: 'flex' }}\n                      onClick={(e) => this.handleAddButton(e)}\n                    >\n                      {isSelected\n                        ? '-'\n                        : '+'}\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\" id={good}>\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}